// from fr-20210328.rhetoric.grammar
#include fr-20210328.modality.grammar

/* **************************************************
 * Default
 ************************************************** */
@trace
illocutionaryAct → modalClause dot {
  //println __FILE__ + " (" + __LINE__ + ")";
  //println ↑;
  [illocutionary:NIL, $rest];
  [vform:$vform, mode:$mode] ⊂ ↑;
  if (¬ $mode)
    $mode = indicative;
  if (¬ $vform)
    $vform = tensed;
  ↓1 = $rest ∪ [vform:$vform, mode:$mode];
  ↓2 = [];
  ⇑ = ⇓1;
}

/* **************************************************
 * Acte illocutoire assert(default), ask, order
 ************************************************** */
illocutionaryAct → est_ce_que modalClause interrogativeDot {
  [illocutionary:ask];
  [vform:$vform, mode:$mode, language_register:familiar|slang] ⊂ ↑;
  if (¬ $mode)
    $mode = indicative;
  if (¬ $vform)
    $vform = tensed;
  ↓1 = [];
  ↓2 = ↑ ∪ [vform:$vform, mode:$mode];
  ↓3 = [];
  ⇑ = ⇓1;
}

/*
illocutionaryAct → modalClause interrogativeDot {
  [illocutionary:ask];
  [vform:$vform, mode:$mode, language_register:default] ⊂ ↑;
  if (¬ $mode)
    $mode = indicative;
  if (¬ $vform)
    $vform = tensed;
  ↓1 = ↑ ∪ [inv:yes, vform:$vform, mode:$mode];
  ↓2 = [];
  ⇑ = ⇓1;
}
*/

illocutionaryAct → il_me_semble_que modalClause dot {
  [illocutionary:it_seems_to_me, $rest];
  [vform:$vform, mode:$mode] ⊂ ↑;
  if (¬ $mode)
    $mode = indicative;
  if (¬ $vform)
    $vform = tensed;
  ↓1 = [];
  ↓2 = ↑ ∪ [vform:$vform, mode:$mode];
  ↓3 = [];
  ⇑ = ⇓2;
}

illocutionaryAct → modalClause dot {
  [illocutionary:order];
  [vform:$vform, mode:$mode] ⊂ ↑;
  if (¬ $mode)
    $mode = imperative;
  if (¬ $vform)
    $vform = tensed;
  ↓1 = ↑ ∪ [vform:$vform, mode:$mode];
  ↓2 = [];
  ⇑ = ⇓1;
}

/*
illocutionaryAct → modalClause form|interrogativeDot {
  [illocutionary:calling_for, $rest];
  [vform:$vform, mode:$mode, i:$I] ⊂ ↑;
  [PRED:$PREDI, person:$personI] ⊂ $I;
  if (¬ $mode)
    $mode = indicative;
  if (¬ $vform)
    $vform = tensed;
  ↓1 = [inv:yes, vform:$vform, mode:$mode, modality:pouvoir, $rest];
  if ($PREDI == _pro && $personI == two) {
    ↓2 = [FORM:", s'il te plait ?"];
  }
  else {
    ↓2 = [];
  }
  ⇑ = ⇓1;
}
*/

illocutionaryAct → est_ce_que modalClause interrogativeDot {
  [illocutionary:calling_for, $rest];
  [vform:$vform, mode:$mode, i:$I] ⊂ ↑;
  [PRED:$PREDI, person:$personI] ⊂ $I;
  if (¬ $mode)
    $mode = indicative;
  if (¬ $vform)
    $vform = tensed;
  ↓1 = [];
  ↓2 = [vform:$vform, mode:$mode, modality:pouvoir, $rest];
  ↓3 = [];
  ⇑ = ⇓2;
}

illocutionaryAct → est_ce_que modalClause form|interrogativeDot {
  [illocutionary:polite_calling_for, $rest];
  [vform:$vform, mode:$mode, i:$I] ⊂ ↑;
  [PRED:$PREDI, person:$personI] ⊂ $I;
  if (¬ $mode)
    $mode = indicative;
  if (¬ $vform)
    $vform = tensed;
  ↓1 = [];
  ↓2 = [vform:$vform, mode:$mode, modality:pouvoir, $rest];
  if ($PREDI == _pro && $personI == two) {
    ↓3 = [FORM:", s'il te plait ?"];
  }
  else {
    ↓3 = [];
  }
  ⇑ = ⇓2;
}

illocutionaryAct → modalClause dot {
  [illocutionary:assert];
  [vform:$vform, mode:$mode] ⊂ ↑;
  if (¬ $mode)
    $mode = indicative;
  if (¬ $vform)
    $vform = tensed;
  ↓1 = ↑ ∪ [vform:$vform, mode:$mode];
  ↓2 = [];
  ⇑ = ⇓1;
}
