@trace
@withspaces
S → [ NP | cln ] vp {
  println __FILE__ + " (" + __LINE__ + ")";
  println ↑;
  [subj:$subj, $rest];
  [aggrSubjSCompSubj:$aggrSubjSCompSubj, inv:$inv, mode:$mode, language_register:$language_register] ⊂ ↑;
  [HEAD:$predSubj] ⊂ $subj;
  if (#1){
    attest (#1.1 ⇒ ($predSubj ≠ __pro));
    ↓1 = $subj ∪ [det:yes, language_register:$language_register];
    attest ($mode != imperative) ∧ (($inv != yes) ∨ ($predSubj != __pro));
    $subjSynt = ⇓1;
    [number:$N, gender:$G, person:$P] ⊂ ⇓1;
    if ($aggrSubjSCompSubj == yes){
      ↓2 = [subj:[number:$N, gender:$G, person:$P], scomp:[subj:[number:$N, gender:$G, person:$P]], $rest] ∪ [subj:$subjSynt];
    } else {
      ↓2 = [subj:[number:$N, gender:$G, person:$P], $rest] ∪ [subj:$subjSynt];
    }
  }
  else {
    attest ($mode == imperative) ∨ (($inv == yes) ∧ ($predSubj == __pro));
    [number:$N, gender:$G, person:$P] ⊂ $subj;
    $subjSynt = [];
    if ($aggrSubjSCompSubj == yes){
      ↓2 = [subj:[number:$N, gender:$G, person:$P], scomp:[subj:[number:$N, gender:$G, person:$P]], mode:$mode, $rest];
    } else {
      ↓2 = [subj:[number:$N, gender:$G, person:$P], mode:$mode, $rest];
    }
  }
  ⇑ = ⇓2 ∪ [subj:$subjSynt];
}

@withspaces
NP → det noun
{
 ↓1 = ↑; 
 ↓2 = ↑; 
  ⇑ = 
[HEAD:HORLOGER, 
lexical_function:default,
number:sg,
det:yes,
gender:ms,
def:no,
dem:no,
poss:no,
part:no,
//language_register	_
person:three];
}