/************************************************************
* Patterns
************************************************************/
@m = [gender:ms];
@f = [gender:fm];
@_1 = [person:one];
@_2 = [person:two];
@_12 = [person:one|two];
@_13 = [person:one|three];
@_3 = [person:three];
@s = [number:sg];
@p = [number:pl];
@_1s = [@_1, @s];
@_2s = [@_2, @s];
@_12s = [@_12, @s];
@_13s = [@_13, @s];
@_3s = [@_3, @s];
@_1p = [@_1, @p];
@_2p = [@_2, @p];
@_3p = [@_3, @p];
@_3ms = [@_3s, @m];
@_3fs = [@_3s, @f];
@hum = [human:true];
@nohum = [human:false];
@def = [def:true];

/************************************************************
*  Forms
************************************************************/
FORM form;

/************************************************************
*  Variable words
************************************************************/
"$vtense: "	VTENSE [vtense:$vtense];

/************************************************************
* Noms propres
************************************************************/
John	proper_noun [HEAD:JOHN, @_3s, @hum];
Mary	proper_noun [HEAD:MARY, @_3s, @hum];
Elvex	proper_noun [HEAD:ELVEX, @_3s];

/************************************************************
* Pronoms nominatifs
************************************************************/
I	cln [HEAD:pro, @_1s, animate:true, @hum, case:nominative]
	| cln [HEAD:EGO, @_1s, animate:true, @hum, case:nominative];
you	cln [HEAD:pro, @_2s, animate:true, @hum, case:nominative]
	| cln [HEAD:pro, @_2p, animate:true, @hum, case:nominative]
	| cln [HEAD:YOU, @_2s, animate:true, @hum, case:nominative];
he	cln [HEAD:pro, @_3ms, animate:true, @hum, case:nominative];
she	cln [HEAD:pro, @_3fs, animate:true, @hum, case:nominative];
it	cln [HEAD:pro, @_3fs, @nohum, case:nominative];
we	cln [HEAD:pro, @_1p, animate:true, @hum, case:nominative];
they	cln [HEAD:pro, @_3p, case:nominative];

/************************************************************
* Pronoms accusatifs
************************************************************/
me	pro [HEAD:pro, @_1s, animate:true, @hum, case:accusative];
you	pro [HEAD:pro, @_2, animate:true, @hum, case:accusative];
him	pro [HEAD:pro, @_3ms, animate:true, @hum, case:accusative];
her	pro [HEAD:pro, @_3fs, animate:true, @hum, case:accusative];
it	pro [HEAD:pro, @_3s, @nohum, case:accusative];
us	pro [HEAD:pro, @_1p, animate:true, @hum, case:accusative];
them	pro [HEAD:pro, @_3p, case:accusative];

/************************************************************
* Pronoms réflexifs
************************************************************/
myself	pro [HEAD:pro, @_1s, case:reflexive];
yourself pro [HEAD:pro, @_2s, case:reflexive];
himself pro [HEAD:pro, @_3s, case:reflexive];

// Déterminants
a	det	[number:sg, def:false, poss:false, part:false, dem:false];
""	det	[number:pl, def:false, poss:false, part:false, dem:false];
the	det	[def:true, poss:false, part:false, dem:false];

my	det [number:sg, def:false, poss:true, part:false, dem:false, owner:[@_1s]];
your	det [number:sg, def:false, poss:true, part:false, dem:false, owner:[@_2s]];
our	det [number:pl, def:false, poss:true, part:false, dem:false, owner:[@_1p]];
their	det [number:pl, def:false, poss:true, part:false, dem:false, owner:[@_3p]];
his	det [number:sg, gender:ms, def:false, poss:true, part:false, dem:false, owner:[@_3ms]];
her	det [number:sg, gender:fs, def:false, poss:true, part:false, dem:false, owner:[@_3fs]];

/************************************************************
* Auxiliaires verbaux
************************************************************/
// negative or interrogative forms 
do	aux [vtense:present, tensed:true, SUBJECT:[@_12s], verb_vform:infinitive, verbal_constr:neg|int]
	| aux [vtense:present, tensed:true, SUBJECT:[@p], verb_vform:infinitive, verbal_constr:neg|int];
does	aux [vtense:present, tensed:true, SUBJECT:[@_3s], verb_vform:infinitive, verbal_constr:neg|int];

did	aux [vtense:preterite, tensed:true, verb_vform:infinitive, verbal_constr:neg|int];

// simple auxiliary
am	aux [vtense:present_continuous, tensed:true, SUBJECT:[@_1s], verb_vform:present_participle];
are	aux [vtense:present_continuous, tensed:true, SUBJECT:[@_2s], verb_vform:present_participle]
	| aux [vtense:present_continuous, tensed:true, SUBJECT:[@p], verb_vform:present_participle];
is	aux [vtense:present_continuous, tensed:true, SUBJECT:[@_3s], verb_vform:present_participle];

have	aux [vtense:present_perfect, tensed:true, SUBJECT:[@_12s], verb_vform:past_participle]
	| aux [vtense:present_perfect, tensed:true, SUBJECT:[@p], verb_vform:past_participle];
has	aux [vtense:present_perfect, tensed:true, SUBJECT:[@_3s], verb_vform:past_participle];

will	aux [vtense:future, tensed:true, verb_vform:infinitive];

was	aux [vtense:past_continous, tensed:true, SUBJECT:[@_13s], verb_vform:present_participle];
were	aux [vtense:past_continous, tensed:true, SUBJECT:[@_2s], verb_vform:present_participle]
	| aux [vtense:past_continous, tensed:true, SUBJECT:[@p], verb_vform:present_participle];

had	aux [vtense:past_perfect, tensed:true, verb_vform:past_participle];

// complex auxiliary
will	aux [vtense:future_perfect, tensed:true, aux_form:have, verb_vform:past_participle];

will	aux [vtense:future_continuous, tensed:true, aux_form:be, verb_vform:present_participle];

have	aux [vtense:present_perfect_continuous, tensed:true, SUBJECT:[@_12s], aux_form:been, verb_vform:present_participle]
	| aux [vtense:present_perfect_continuous, tensed:true, SUBJECT:[@p], aux_form:been, verb_vform:present_participle];
has	aux [vtense:present_perfect_continuous, tensed:true, SUBJECT:[@_3s], aux_form:been, verb_vform:present_participle];

had	aux [vtense:past_perfect_continuous, tensed:true, aux_form:been, verb_vform:present_participle];

will	aux [vtense:future_perfect_continuous, tensed:true, aux_form:have_been, verb_vform:present_participle];

have	have [aux_form:have];
be	be [aux_form:be];
been	been [aux_form:been];
"have been"	have [aux_form:have_been];
not	not;

/************************************************************
* 
************************************************************/
"?"	strongPunct [punct:_int_];
"."	strongPunct [punct:_dot_];
"!"	strongPunct [punct:_excl_];

/************************************************************
* 
************************************************************/
"down"	part [particle:_down_];
"out"	part [particle:_out_];

/************************************************************
* 
************************************************************/
"to"	prep [pcase:_to_];
"at"	prep [pcase:_at_];
"on"	prep [pcase:_on_];
"over"	prep [pcase:_over_];

/************************************************************
* 
************************************************************/
"to"	to [];

/************************************************************
* 
************************************************************/
"that"	csu [compl:_that_];
"if"	csu [compl:_if_];
"when"	csu [compl:_when_];
"whether"	csu [compl:_whether_];

/************************************************************
* 
************************************************************/
"abroad" advs [HEAD:ABROAD];

"black"	adjColor [HEAD:BLACK];
"big"	adjSize	[HEAD:BIG];

"beautiful"	adjQuality [HEAD:BEAUTIFUL];
"large"	adjSize [HEAD:LARGE];
"round" adjShape [HEAD:ROUND];
"wooden" adjMaterial [HEAD:WOODEN];
