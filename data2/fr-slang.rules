#include fr-slang.rhetoric.rules
#include fr-slang.noun.rules

/* **************************************************
 * Start with an NP
 ************************************************** */

text → NP {
  [PRED:$pred];
  attest $pred ≠ paragraph;
  ↓1 = ↑;
  ⇑ = ⇓1;
}

/* **************************************************
 * Start with a Narative Sentence
 ************************************************** */
textWithInfo → info [int] [exclamativeDot] rhetoricalStructure {
  [PRED:$pred, illocutionary:$illocutionary, modality:$modality, language_register:$language_register, int:$int, $rest] ⊂ ↑;
  println("*** ", __FILE__, "(", __LINE__, "): ", "[language_register:", $Synth_language_register, "]");
  
  if (¬ $illocutionary)
    $illocutionary = default;
  if (¬ $modality)
    $modality = default;
  if (¬ $language_register)
    $language_register = default;
 if ($int == true) {
    ↓2 = [PRED:_int, language_register:$language_register];
    ↓3 = [];
  }
  attest (#2 <=> #3);
  if (($pred ≠ cause) ∧ ($pred ≠ succ) ∧ ($pred ≠ et)){
    ↓4 = ↑ ∪ [illocutionary:$illocutionary, modality:$modality, language_register:$language_register];
  } else {
    ↓4 = [rhet:$pred, illocutionary:$illocutionary, modality:$modality, language_register:$language_register, $rest];
  }
  ↓1 = ⇓4;
  ⇑ = ⇓4;
}

/* **************************************************
 * Start with a Narative Sentence
 ************************************************** */
text → [int] [exclamativeDot] rhetoricalStructure {
  [PRED:$pred, illocutionary:$illocutionary, modality:$modality, language_register:$language_register, int:$int, $rest] ⊂ ↑;
  if (¬ $illocutionary)
    $illocutionary = default;
  if (¬ $modality)
    $modality = default;
  if (¬ $language_register)
    $language_register = default;
  if ($int == true) {
    ↓1 = [PRED:_int, language_register:$language_register];
    ↓2 = [];
  }
  attest (#1 <=> #3);
  if (($pred ≠ cause) ∧ ($pred ≠ succ) ∧ ($pred ≠ et)){
    ↓3 = ↑ ∪ [illocutionary:$illocutionary, modality:$modality, language_register:$language_register];
  } else {
    ↓3 = [rhet:$pred, illocutionary:$illocutionary, modality:$modality, language_register:$language_register, $rest];
  }
  ⇑ = ⇓3;
}

