// from fr-slang.modal.rules
#include fr-slang.tensed.rules

/* **************************************************
* Expressions temporelles
************************************************** */

timeClause → timeClauseCont {
  [time:NIL, $rest];
  ↓1 = $rest;
  ⇑ = ⇓1;
}

timeClause → timeClauseCont {
  [time:now, tense:$tense, $rest];
  if (!$tense || $tense != present)
     $tense = present;
  ↓1 = [modS:<[PRED:MAINTENANT]>, modSType:time, tense:$tense, $rest];
  ⇑ = ⇓1;
}


timeClause → timeClauseCont {
  [time:today, tense:$tense, $rest];
  if (!$tense)
     $tense = present;
  ↓1 = [modS:<[PRED:AUJOURD_HUI]>, modSType:time, tense:$tense, $rest];
  ⇑ = ⇓1;
}


timeClause → timeClauseCont {
  [time:yesterday, tense:$tense, aspect:$aspect, $rest];
  if (!$tense)
       $tense = past;
  if (!$aspect || $aspect != pluperfect)
         $aspect = pluperfect;
  ↓1 = [modS:<[PRED:HIER]>, modSType:time, tense:$tense, aspect:$aspect, $rest];
  ⇑ = ⇓1;
}


timeClause → timeClauseCont {
  [time:tomorrow, tense:$tense, aspect:$aspect, $rest];
  if (!$tense)
       $tense = future;
  ↓1 = [modS:<[PRED:DEMAIN]>, modSType:time, tense:$tense, aspect:$aspect, $rest];
  ⇑ = ⇓1;
}

/* **************************************************
* Expressions temporelles
************************************************** */

timeClauseCont → tensedClause {
  [modS:NIL, $rest];
  ↓1 = $rest;
  ⇑ = ⇓1;
}

timeClauseCont → tensedClause form time form time {
  [modSType:lap_date, modS:<$CAR::<$CADR::$CDDR> >, $rest];
  ↓1 = [modS:$CDDR, $rest];
  ↓2 = [FORM:"du"];
  ↓3 = [type:date, $CAR];
  ↓4 = [FORM:"au"];
  ↓5 = [type:date, $CADR];
  ⇑ = ⇓1;
}

timeClauseCont → form time form time comma tensedClause {
  [modSType:lap_deixis, modS:<$CAR::<$CADR::$CDDR> >, $rest];
  ↓1 = [FORM:"à partir de"];
  ↓2 = [type:time, $CAR];
  ↓3 = [FORM:"jusqu'à"];
  ↓4 = [type:time, $CADR];
  ↓5 = [];
  ↓6 = [modS:$CDDR, $rest];
  ⇑ = ⇓6;
}

timeClauseCont → time|adv tensedClause {
  [modSType:time, vform:tensed];
  [modSType:time, modS:<$Head::$Tail>, $rest];
  ↓1 = [type:time, $Head];
  ↓2 = [modS:$Tail, $rest];
  ⇑ = ⇓2;
}

/*timeClauseCont → tensedClause time {
  [modSType:time, vform:infinitive];
  [modSType:time, modS:<$Head::$Tail>, $rest];
  ↓1 = [$rest, modS:$Tail];
  ↓2 = [type:time, $Head];
  ⇑ = ⇓1;
}*/

